<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Python Challenge Strategy</title>
    <link>https://3gbywork.github.io/PythonChallengeStrategy/post/</link>
    <description>Recent content in Posts on Python Challenge Strategy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 14 Dec 2018 20:01:15 +0800</lastBuildDate>
    
	<atom:link href="https://3gbywork.github.io/PythonChallengeStrategy/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>018. can you tell the difference?</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge018/</link>
      <pubDate>Fri, 14 Dec 2018 20:01:15 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge018/</guid>
      <description>关卡地址 解决方案： 思路： 可以很明显的看出图片左右两部分的亮度不同，但还是看一下源代码的提示： it is more obvious that what you might think 替换url为bright会提示</description>
    </item>
    
    <item>
      <title>017. eat?</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge017/</link>
      <pubDate>Thu, 06 Dec 2018 23:45:58 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge017/</guid>
      <description>关卡地址 解决方案： 思路： 这一关图片中是曲奇饼干，左下角图片是不是有点熟悉？是第四关啦！ 查看源代码并没有什么提示。 但是！根据cookie可以联</description>
    </item>
    
    <item>
      <title>016. let me get this straight</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge016/</link>
      <pubDate>Thu, 29 Nov 2018 22:52:49 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge016/</guid>
      <description>关卡地址 解决方案： 思路： 图片每一行都有一条7个像素组成的像素块，两端是1个白色像素，中间是5个粉紫色像素，色值是(255,0,255)。由于</description>
    </item>
    
    <item>
      <title>015. whom?</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge015/</link>
      <pubDate>Wed, 28 Nov 2018 22:13:08 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge015/</guid>
      <description>关卡地址 解决方案： 思路： 解释下这个日历，顶部是月份、年份，中间是当月日历，底部分别是上个月与下个月的缩略图 在源代码有两条提示： he ain&amp;rsquo;t the youngest, he is the</description>
    </item>
    
    <item>
      <title>014. walk around</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge014/</link>
      <pubDate>Mon, 26 Nov 2018 16:55:53 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge014/</guid>
      <description>关卡地址 解决方案： 思路： 这一关大图下面有个小图，查看源代码后发现是10000*1的图片显示为100*100： 100 × 100 pixels (Natural: 10000 × 1 pixels) 同时还有一个提</description>
    </item>
    
    <item>
      <title>013. call him</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge013/</link>
      <pubDate>Fri, 23 Nov 2018 16:35:45 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge013/</guid>
      <description>关卡地址 解决方案： 思路： 这一关给了一部电话，并且提示：phone that evil。电话按键只有“5”这个按键是可用的，点击后会得到如下提示： faultCode 105 faultString</description>
    </item>
    
    <item>
      <title>012. dealing evil</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge012/</link>
      <pubDate>Sun, 18 Nov 2018 18:55:17 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge012/</guid>
      <description>关卡地址 解决方案： 思路： 这一关提示很隐晦，图片名称是evil1.jpg，那是不是还有evil2.jpg呢？ 在浏览器输入evil2.jpg的地</description>
    </item>
    
    <item>
      <title>011. odd even</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge011/</link>
      <pubDate>Wed, 14 Nov 2018 21:03:49 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge011/</guid>
      <description>关卡地址 解决方案： 思路： 这一关的提示比较干净，一切都需要从图片中提取分析。 把所有像素值提取到文本，以下为前4行前8列像素数据： (0, 20, 0)(142, 180, 105)(0, 20, 0)(139,</description>
    </item>
    
    <item>
      <title>010. what are you looking at?</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge010/</link>
      <pubDate>Tue, 13 Nov 2018 13:19:40 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge010/</guid>
      <description>关卡地址 解决方案： 思路： 图片中的牛说：“你瞅啥？”，然后你说：“瞅你咋地，不光瞅你还打你呢”。（皮一下很开心😝）。然后（点击它）会得到一个s</description>
    </item>
    
    <item>
      <title>009. connect the dots</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge009/</link>
      <pubDate>Sun, 11 Nov 2018 22:11:14 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge009/</guid>
      <description>关卡地址 解决方案： 思路： 在图片中没有找到有用的信息，老规矩看源文件： first+second=? first: 146,399,163,403,170,393,169,391,166,386,170,381,170,371,170,355,169,346,167,335,170,329,170,320,170, 310,171,301,173,290,178,289,182,287,188,286,190,286,192,291,194,296,195,305,194,307,191,312,190,316, 190,321,192,331,193,338,196,341,197,346,199,352,198,360,197,366,197,373,196,380,197,383,196,387,192, 389,191,392,190,396,189,400,194,401,201,402,208,403,213,402,216,401,219,397,219,393,216,390,215,385, 215,379,213,373,213,365,212,360,210,353,210,347,212,338,213,329,214,319,215,311,215,306,216,296,218, 290,221,283,225,282,233,284,238,287,243,290,250,291,255,294,261,293,265,291,271,291,273,289,278,287, 279,285,281,280,284,278,284,276,287,277,289,283,291,286,294,291,296,295,299,300,301,304,304,320,305, 327,306,332,307,341,306,349,303,354,301,364,301,371,297,375,292,384,291,386,302,393,324,391,333,387, 328,375,329,367,329,353,330,341,331,328,336,319,338,310,341,304,341,285,341,278,343,269,344,262,346, 259,346,251,349,259,349,264,349,273,349,280,349,288,349,295,349,298,354,293,356,286,354,279,352,268, 352,257,351,249,350,234,351,211,352,197,354,185,353,171,351,154,348,147,342,137,339,132,330,122,327, 120,314,116,304,117,293,118,284,118,281,122,275,128,265,129,257,131,244,133,239,134,228,136,221,137, 214,138,209,135,201,132,192,130,184,131,175,129,170,131,159,134,157,134,160,130,170,125,176,114,176, 102,173,103,172,108,171,111,163,115,156,116,149,117,142,116,136,115,129,115,124,115,120,115,115,117, 113,120,109,122,102,122,100,121,95,121,89,115,87,110,82,109,84,118,89,123,93,129,100,130,108,132,110, 133,110,136,107,138,105,140,95,138,86,141,79,149,77,155,81,162,90,165,97,167,99,171,109,171,107,161, 111,156,113,170,115,185,118,208,117,223,121,239,128,251,133,259,136,266,139,276,143,290,148,310,151, 332,155,348,156,353,153,366,149,379,147,394,146,399 second: 156,141,165,135,169,131,176,130,187,134,191,140,191,146,186,150,179,155,175,157,168,157,163,157,159, 157,158,164,159,175,159,181,157,191,154,197,153,205,153,210,152,212,147,215,146,218,143,220,132,220, 125,217,119,209,116,196,115,185,114,172,114,167,112,161,109,165,107,170,99,171,97,167,89,164,81,162, 77,155,81,148,87,140,96,138,105,141,110,136,111,126,113,129,118,117,128,114,137,115,146,114,155,115, 158,121,157,128,156,134,157,136,156,136 根据标题，这关是需要</description>
    </item>
    
    <item>
      <title>008. working hard?</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge008/</link>
      <pubDate>Fri, 09 Nov 2018 15:25:57 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge008/</guid>
      <description>关卡地址 解决方案： 思路： 这一关，图片下面有这样的提示： Where is the missing link? 鼠标在图片上“扫描”一遍发现，图片中蜜蜂区域是可点击的，访问的就是下一关的地</description>
    </item>
    
    <item>
      <title>007. smarty</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge007/</link>
      <pubDate>Tue, 06 Nov 2018 15:14:54 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge007/</guid>
      <description>关卡地址 解决方案： 思路： 这一关源代码中没有任何提示信息，看来信息都在图片中了。 图片中间位置有一条灰度图像，灰度图取值范围与ASCII码范围一</description>
    </item>
    
    <item>
      <title>006. now there are pairs</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge006/</link>
      <pubDate>Sun, 04 Nov 2018 22:58:08 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge006/</guid>
      <description>关卡地址 解决方案： 思路： 图片没有提供任何有用的信息。查看源代码得到如下信息： &amp;lt;-- zip 额，更改url可以得到一个压缩文件。 打开压缩文件，找到rea</description>
    </item>
    
    <item>
      <title>005. peak hell</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge005/</link>
      <pubDate>Sat, 03 Nov 2018 12:51:59 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge005/</guid>
      <description>关卡地址 解决方案： 思路： 图片下有句提示信息： pronounce it 查看源代码得到如下提示： peak hell sounds familiar ? 听着一点也不熟悉好吧😂！无奈找了其他攻略，原来说的是pyt</description>
    </item>
    
    <item>
      <title>004. follow the chain</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge004/</link>
      <pubDate>Tue, 30 Oct 2018 11:18:54 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge004/</guid>
      <description>关卡地址 解决方案： 思路： 这一关鼠标移动到图片上指针会变成小手，点击会得到如下信息： and the next nothing is 44827 同时，url后面多了参数?nothing=12</description>
    </item>
    
    <item>
      <title>003. re</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge003/</link>
      <pubDate>Mon, 29 Oct 2018 11:40:58 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge003/</guid>
      <description>关卡地址 解决方案： 思路： 这一关同样不贴图了，直接看图片下提示： One small letter, surrounded by EXACTLY three big bodyguards on each of its sides. 和上一关一样，需要从源代码中找到“一个两边完全被三</description>
    </item>
    
    <item>
      <title>002. ocr</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge002/</link>
      <pubDate>Sun, 28 Oct 2018 22:12:21 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge002/</guid>
      <description>关卡地址 解决方案： 思路： 这一关就不贴图了，直接看图片下提示： recognize the characters. maybe they are in the book, but MAYBE they are in the page source. 很明显，玄机在源代码中。在源代码中有这样的提示</description>
    </item>
    
    <item>
      <title>001. What about making trans?</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge001/</link>
      <pubDate>Sat, 27 Oct 2018 20:06:51 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge001/</guid>
      <description>关卡地址 解决方案： 思路： 图中给出了字母的映射关系，通过规律来破解下面这段话： g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr&amp;rsquo;q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb.</description>
    </item>
    
    <item>
      <title>000. warming up</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge000/</link>
      <pubDate>Sat, 27 Oct 2018 20:05:51 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge000/</guid>
      <description>关卡地址 解决方案： 思路： 提示：试试更改url 从图中容易看出，需要求出 \(2^{38}\) = ? 得到的值就是下一关的地址 代码： Python PS src\static&amp;gt; python .\Code\Python\Challenge000.py PowerShell PS src\static&amp;gt; .\Code\PowerShell\Challenge000.ps1 Go PS src\static&amp;gt; .\Code\Go\Challenge.exe -l 000 最终结</description>
    </item>
    
  </channel>
</rss>