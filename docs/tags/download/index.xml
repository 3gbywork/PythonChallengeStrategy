<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Download on Python Challenge Strategy</title>
    <link>https://3gbywork.github.io/PythonChallengeStrategy/tags/download/</link>
    <description>Recent content in Download on Python Challenge Strategy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 14 Dec 2018 20:01:15 +0800</lastBuildDate>
    
	<atom:link href="https://3gbywork.github.io/PythonChallengeStrategy/tags/download/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>018. can you tell the difference?</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge018/</link>
      <pubDate>Fri, 14 Dec 2018 20:01:15 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge018/</guid>
      <description>关卡地址 解决方案： 思路： 可以很明显的看出图片左右两部分的亮度不同，但还是看一下源代码的提示： it is more obvious that what you might think 替换url为bright会提示</description>
    </item>
    
    <item>
      <title>017. eat?</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge017/</link>
      <pubDate>Thu, 06 Dec 2018 23:45:58 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge017/</guid>
      <description>关卡地址 解决方案： 思路： 这一关图片中是曲奇饼干，左下角图片是不是有点熟悉？是第四关啦！ 查看源代码并没有什么提示。 但是！根据cookie可以联</description>
    </item>
    
    <item>
      <title>016. let me get this straight</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge016/</link>
      <pubDate>Thu, 29 Nov 2018 22:52:49 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge016/</guid>
      <description>关卡地址 解决方案： 思路： 图片每一行都有一条7个像素组成的像素块，两端是1个白色像素，中间是5个粉紫色像素，色值是(255,0,255)。由于</description>
    </item>
    
    <item>
      <title>014. walk around</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge014/</link>
      <pubDate>Mon, 26 Nov 2018 16:55:53 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge014/</guid>
      <description>关卡地址 解决方案： 思路： 这一关大图下面有个小图，查看源代码后发现是10000*1的图片显示为100*100： 100 × 100 pixels (Natural: 10000 × 1 pixels) 同时还有一个提</description>
    </item>
    
    <item>
      <title>012. dealing evil</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge012/</link>
      <pubDate>Sun, 18 Nov 2018 18:55:17 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge012/</guid>
      <description>关卡地址 解决方案： 思路： 这一关提示很隐晦，图片名称是evil1.jpg，那是不是还有evil2.jpg呢？ 在浏览器输入evil2.jpg的地</description>
    </item>
    
    <item>
      <title>011. odd even</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge011/</link>
      <pubDate>Wed, 14 Nov 2018 21:03:49 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge011/</guid>
      <description>关卡地址 解决方案： 思路： 这一关的提示比较干净，一切都需要从图片中提取分析。 把所有像素值提取到文本，以下为前4行前8列像素数据： (0, 20, 0)(142, 180, 105)(0, 20, 0)(139,</description>
    </item>
    
    <item>
      <title>007. smarty</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge007/</link>
      <pubDate>Tue, 06 Nov 2018 15:14:54 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge007/</guid>
      <description>关卡地址 解决方案： 思路： 这一关源代码中没有任何提示信息，看来信息都在图片中了。 图片中间位置有一条灰度图像，灰度图取值范围与ASCII码范围一</description>
    </item>
    
    <item>
      <title>006. now there are pairs</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge006/</link>
      <pubDate>Sun, 04 Nov 2018 22:58:08 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge006/</guid>
      <description>关卡地址 解决方案： 思路： 图片没有提供任何有用的信息。查看源代码得到如下信息： &amp;lt;-- zip 额，更改url可以得到一个压缩文件。 打开压缩文件，找到rea</description>
    </item>
    
    <item>
      <title>005. peak hell</title>
      <link>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge005/</link>
      <pubDate>Sat, 03 Nov 2018 12:51:59 +0800</pubDate>
      
      <guid>https://3gbywork.github.io/PythonChallengeStrategy/post/challenge005/</guid>
      <description>关卡地址 解决方案： 思路： 图片下有句提示信息： pronounce it 查看源代码得到如下提示： peak hell sounds familiar ? 听着一点也不熟悉好吧😂！无奈找了其他攻略，原来说的是pyt</description>
    </item>
    
  </channel>
</rss>